name: backend ci

on:
  push:
    branches: [ "main" ]
    paths:
      - 'backend/**'
      - '.github/workflows/ci.yml'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'backend/**'

jobs:
  build-and-test:
    name: build & test
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    services:
      postgres:
        image: pgvector/pgvector:18
        env:
          POSTGRES_DB: aitex_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: 'gradle'

    - name: grant execute permission for gradlew
      working-directory: ./backend
      run: chmod +x gradlew

    - name: cache gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('backend/**/*.gradle*', 'backend/**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            
    - name: validate gradle wrapper
      uses: gradle/wrapper-validation-action@v2

    - name: build with gradle
      working-directory: ./backend
      env:
        SPRING_PROFILES_ACTIVE: test
      run: ./gradlew clean build -x test --no-daemon --stacktrace

    - name: run unit tests
      working-directory: ./backend
      env:
        SPRING_PROFILES_ACTIVE: test
        DATABASE_URL: jdbc:postgresql://localhost:5432/aitex_test
        DATABASE_USERNAME: postgres
        DATABASE_PASSWORD: postgres
      run: ./gradlew test --no-daemon --stacktrace

    - name: generate coverage report
      working-directory: ./backend
      run: ./gradlew jacocoTestReport --no-daemon
      continue-on-error: true

    - name: upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: backend/build/test-results/test/*.xml
        retention-days: 7
        
    - name: upload coverage report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: backend/build/reports/jacoco/test/html/
        retention-days: 7
    
    - name: Comment PR with test results
      if: github.event_name == 'pull_request' && always()
      uses: EnricoMi/publish-unit-test-result-action@v2
      with:
        files: backend/build/test-results/test/*.xml
        comment_mode: always

    - name: build jar
      working-directory: ./backend
      run: ./gradlew bootJar --no-daemon

    - name: upload jar artifact
      uses: actions/upload-artifact@v4
      with: 
        name: aitex-backend-${{ github.sha }}
        path: backend/build/libs/*.jar
        retention-days: 30

    - name: succes notification
      if: success()
      run: |
        echo "Build successful!"
        echo "Artifact: aitex-backend-${{ github.sha }}"
        echo "Test results: backend/build/test-results/"
        echo "Coverage: backend/build/reports/jacoco/"
